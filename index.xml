<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>L1NNA</title>
    <link>https://l1nna.com/</link>
    <description>Recent content on L1NNA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://l1nna.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deep Learning Server Budget Build</title>
      <link>https://l1nna.com/post/deep-learning-hardware/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/post/deep-learning-hardware/</guid>
      <description>I was looking for a budget build workstation for deep learning model training.</description>
    </item>
    
    <item>
      <title>Assembly Code Data Mining</title>
      <link>https://l1nna.com/project/assembly-code-data-mining/</link>
      <pubDate>Wed, 12 Sep 2018 14:51:12 +0600</pubDate>
      
      <guid>https://l1nna.com/project/assembly-code-data-mining/</guid>
      <description>&lt;p&gt;Assembly clone search greatly reduces the manual effort of reverse engineering since it can &lt;em&gt;identify the cloned parts that have been previously analyzed&lt;/em&gt;. By closely collaborating with reverse engineers, I studied the challenges, designed and implemented an award-winning clone search engine called &lt;a href=&#34;https://github.com/McGill-DMaS/Kam1n0-Community&#34;&gt;Kam1n0&lt;/a&gt;. It also includes specialized techniques that can mitigate the variance introduced by different processor families, different compilers, optimization techniques, and binary protection techniques. Kam1n0 has been presented at the Smart Cybersecurity Network Canada (SERENE-RISC), SOPHOS, ESET, Above Security, and Google.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Authorship Analysis</title>
      <link>https://l1nna.com/project/authorship-analysis/</link>
      <pubDate>Wed, 12 Sep 2018 14:51:12 +0600</pubDate>
      
      <guid>https://l1nna.com/project/authorship-analysis/</guid>
      <description>&lt;p&gt;The internet provides an ideal anonymous channel for concealing computer-mediated malicious activities, as the network-based origins of critical electronic textual evidence (e.g., emails, blogs, forum posts, chat logs, etc.) can be easily repudiated. Given the anonymous documents, authorship analysis is the study of identifying the actual author and his/her socio-linguistic characteristics. Many linguistic stylometric features and computational techniques have been extensively studied for this purpose. However, most of them emphasize promoting the authorship attribution accuracy, and few works have been done for the purpose of constructing and visualizing the evidential traits. I opt for an interpretable and explainable approach by which &lt;em&gt;writing styles can be visualized, compared, and interpreted&lt;/em&gt; by an investigator like fingerprints. I also propose to integrate differential privacy and reinforcement learning to paraphrase text where writing style is sanitized.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Binary Provenance Analysis</title>
      <link>https://l1nna.com/project/binary-provenance/</link>
      <pubDate>Wed, 12 Sep 2018 14:51:12 +0600</pubDate>
      
      <guid>https://l1nna.com/project/binary-provenance/</guid>
      <description>&lt;p&gt;Binary provenance denotes the &lt;em&gt;characteristics of a program that derives from its path from source code to executable form&lt;/em&gt;. Binary provenance is important in the domain of binary forensic and performance analysis. It provides important evidential trial for cybersecurity investigators to track down the hackers behind the security accidence. For example, the Lazarus group is linked to the Wannacry incidence by code similarity. I mainly focus on two critical aspects: &lt;em&gt;toolchain recovery&lt;/em&gt; and &lt;em&gt;authorship analysis&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Neural Malware Analysis</title>
      <link>https://l1nna.com/project/neural-malware-analysis/</link>
      <pubDate>Wed, 12 Sep 2018 14:51:12 +0600</pubDate>
      
      <guid>https://l1nna.com/project/neural-malware-analysis/</guid>
      <description>&lt;p&gt;Malware behavioral indicators denote those potentially high-risk malicious behaviors exhibited, such as unintended network communications, file encryption, keystroke logging, sandbox evasion, and camera manipulation. Generally, they are generated using sandboxes or simulators. However, the complexity of modern malware has been considerably increased. Malware is becoming sandbox-aware by incorporating modern evasive techniques. To address these issues, I propose a new neural network-based static scanner that can &lt;em&gt;characterize the malicious behaviors&lt;/em&gt; of a given executable, &lt;em&gt;without running it in a sandbox&lt;/em&gt;. It can be used as an additional binary analytic layer to mitigate the issues of polymorphism, metamorphism, and evasive techniques.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>R-ggplot Notes</title>
      <link>https://l1nna.com/post/ggplot-notes/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/post/ggplot-notes/</guid>
      <description>Multiplot multiplot &amp;lt;- function(..., plotlist=NULL, file, cols=1, layout=NULL) { require(grid) # Make a list from the .</description>
    </item>
    
    <item>
      <title>Sklean&#43;Xgboost Cross Validation with Grid Search Tuning</title>
      <link>https://l1nna.com/post/sklean-xgboost/</link>
      <pubDate>Mon, 16 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/post/sklean-xgboost/</guid>
      <description>This note illustrates an example using Xgboost with Sklean to tune the parameter using cross-validation.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://l1nna.com/publications/publications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/publications/publications/</guid>
      <description>Journal Articles (3 + 2 in progress)   S.</description>
    </item>
    
    <item>
      <title>CISC 372 Advanced Data Analytics</title>
      <link>https://l1nna.com/course/cisc372/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/course/cisc372/</guid>
      <description>This course will cover association rules mining, classification analysis, cluster analysis, text mining, basic concepts and methods of frequent patterns mining, online analytical mining (OLAM), online analytical processing (OLAP), and datawarehouse architecture.</description>
    </item>
    
    <item>
      <title>CISC/CMPE 327 Software Quality Assurance</title>
      <link>https://l1nna.com/course/cisc327/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/course/cisc327/</guid>
      <description>&amp;ldquo;Quality is not an act. It is a habit.&amp;rdquo; - Aristotle (384 BC - 322 BC)</description>
    </item>
    
    <item>
      <title>CSEC 102 Modern Software Exploitation and Defense</title>
      <link>https://l1nna.com/course/csec102/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/course/csec102/</guid>
      <description>This course will cover association rules mining, classification analysis, cluster analysis, text mining, basic concepts and methods of frequent patterns mining, online analytical mining (OLAM), online analytical processing (OLAP), and datawarehouse architecture.</description>
    </item>
    
    <item>
      <title>GLIS 630 Data Mining</title>
      <link>https://l1nna.com/course/glis630/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/course/glis630/</guid>
      <description>This course will cover association rules mining, classification analysis, cluster analysis, text mining, basic concepts and methods of frequent patterns mining, online analytical mining (OLAM), online analytical processing (OLAP), and datawarehouse architecture.</description>
    </item>
    
    <item>
      <title>IDAAPI Notes</title>
      <link>https://l1nna.com/post/idaapi-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/post/idaapi-notes/</guid>
      <description>Force creation of an assembly function: # get address from unstripped file def check(): f = idaapi.</description>
    </item>
    
    <item>
      <title>IEEE Xplore PDF Check - Missing Fonts</title>
      <link>https://l1nna.com/post/xplor-check-missing-font/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://l1nna.com/post/xplor-check-missing-font/</guid>
      <description>We got a notification last week that our recent paper did not pass the IEEE Xplore compliance check.</description>
    </item>
    
  </channel>
</rss>